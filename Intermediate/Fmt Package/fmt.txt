Go ভাষার fmt প্যাকেজটি ফরম্যাটেড ইনপুট এবং আউটপুট এর জন্য ব্যবহৃত হয় — যেমন টেক্সট প্রিন্ট করা, স্ট্রিং ফরম্যাট করা ইত্যাদি।
এটি C ভাষার printf, scanf-এর মতো কাজ করে।


মূল কাজ

fmt প্যাকেজের প্রধান কাজ হলো:

1.ডেটা প্রিন্ট করা (Print, Printf, Println)

2.স্ট্রিং রিটার্ন করা (Sprint, Sprintf, Sprintln)

3.ইনপুট নেওয়া (Scan, Scanf, Scanln)


| ফাংশন           | বর্ণনা                                          |
| --------------- | ----------------------------------------------- |
| `fmt.Print()`   | আউটপুট প্রিন্ট করে (নতুন লাইন ছাড়া)            |
| `fmt.Println()` | আউটপুট প্রিন্ট করে (নতুন লাইন সহ)               |
| `fmt.Printf()`  | ফরম্যাট করা আউটপুট প্রিন্ট করে                  |
| `fmt.Sprintf()` | ফরম্যাট করা আউটপুটকে স্ট্রিং হিসেবে রিটার্ন করে |
| `fmt.Scan()`    | কনসোল থেকে ইনপুট নেয়                            |
| `fmt.Scanln()`  | ইনপুট নেয় এবং নতুন লাইনে থামে                   |
| `fmt.Scanf()`   | ফরম্যাট অনুযায়ী ইনপুট নেয়                       |




| স্পেসিফায়ার | বর্ণনা               | উদাহরণ                              |
| ------------ | -------------------- | ----------------------------------- |
| `%v`         | মানের ডিফল্ট ফরম্যাট | `fmt.Printf("%v", 42)` → 42         |
| `%d`         | ইন্টিজার সংখ্যা      | `fmt.Printf("%d", 25)` → 25         |
| `%f`         | ভগ্নাংশ সংখ্যা       | `fmt.Printf("%.2f", 3.1416)` → 3.14 |
| `%s`         | স্ট্রিং              | `fmt.Printf("%s", "Go")` → Go       |
| `%t`         | বুলিয়ান              | `fmt.Printf("%t", true)` → true     |
| `%T`         | টাইপ প্রদর্শন        | `fmt.Printf("%T", 42)` → int        |
| `%+v`        | struct সহ ফিল্ড নাম  | `{Name:Afsana Age:22}`              |
