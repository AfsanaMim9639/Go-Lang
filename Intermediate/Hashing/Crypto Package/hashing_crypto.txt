‡ßßÔ∏è‚É£ Hashing (‡¶è‡¶ï‡¶Æ‡ßÅ‡¶ñ‡ßÄ ‡¶π‡ßç‡¶Ø‡¶æ‡¶∂)

‡¶π‡ßç‡¶Ø‡¶æ‡¶∂‡¶ø‡¶Ç ‡¶π‡¶≤‡ßã ‡¶è‡¶Æ‡¶® ‡¶è‡¶ï‡¶ü‡¶ø ‡¶™‡ßç‡¶∞‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá ‡¶Ø‡ßá‡¶ï‡ßã‡¶®‡ßã ‡¶°‡ßá‡¶ü‡¶æ (string, file ‡¶á‡¶§‡ßç‡¶Ø‡¶æ‡¶¶‡¶ø) ‡¶•‡ßá‡¶ï‡ßá fixed-length output (hash) ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡•§

‡¶è‡¶ï‡¶¨‡¶æ‡¶∞ ‡¶π‡ßç‡¶Ø‡¶æ‡¶∂ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶≤‡ßá original data ‡¶´‡¶ø‡¶∞‡ßá ‡¶Ü‡¶®‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º ‡¶®‡¶æ‡•§

‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£: SHA-256 ‡¶π‡ßç‡¶Ø‡¶æ‡¶∂

data := "Hello, Go!"
hash := sha256.Sum256([]byte(data))


‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡ßç‡¶Ø‡¶æ:

"Hello, Go!" ‡¶ï‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ sha256.Sum256 ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡ßá‡¶∞ ‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ‡ßá ‡¶π‡ßç‡¶Ø‡¶æ‡¶∂ ‡¶ï‡¶∞‡¶ø

‡¶´‡¶≤‡¶æ‡¶´‡¶≤ ‡¶è‡¶ï‡¶ü‡¶ø 64-character long hex string ‡¶π‡¶¨‡ßá

‡¶è‡¶á hash unique (‡¶™‡ßç‡¶∞‡¶æ‡¶Ø‡¶º) ‚Äî data ‡¶è‡¶ï‡¶ü‡ßÅ ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶ï‡¶∞‡¶≤‡ßá hash ‡¶™‡ßÅ‡¶∞‡ßã‡¶™‡ßÅ‡¶∞‡¶ø ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶ø‡¶§ ‡¶π‡¶Ø‡¶º




‡ß®Ô∏è‚É£ HMAC (Message Authentication Code)

HMAC ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶π‡¶Ø‡¶º ‡¶°‡ßá‡¶ü‡¶æ‡¶∞ integrity ‡¶ì authenticity verify ‡¶ï‡¶∞‡¶§‡ßá

‡¶Ö‡¶∞‡ßç‡¶•‡¶æ‡ßé, data ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶π‡ßü‡¶®‡¶ø ‡¶è‡¶¨‡¶Ç trusted source ‡¶•‡ßá‡¶ï‡ßá ‡¶è‡¶∏‡ßá‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ ‡¶Ø‡¶æ‡¶ö‡¶æ‡¶á ‡¶ï‡¶∞‡¶æ

key := []byte("mysecretkey")
message := []byte("Hello, Go!")

h := hmac.New(sha256.New, key)
h.Write(message)
signature := h.Sum(nil)


‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡ßç‡¶Ø‡¶æ:

key ‡¶π‡¶≤‡ßã secret key, ‡¶Ø‡¶æ ‡¶∂‡ßÅ‡¶ß‡ßÅ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ sender ‡¶ì receiver ‡¶ú‡¶æ‡¶®‡ßá

message ‡¶π‡¶≤‡ßã ‡¶Ü‡¶∏‡¶≤ ‡¶°‡ßá‡¶ü‡¶æ

hmac.New combined ‡¶ï‡¶∞‡ßá hash + key ‚Üí signature ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßá

‡¶Ø‡ßá‡¶ï‡ßã‡¶®‡ßã ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶ø‡¶§ message ‡¶π‡¶≤‡ßá signature ‡¶Æ‡¶ø‡¶≤‡¶¨‡ßá ‡¶®‡¶æ



‡ß©Ô∏è‚É£ Password Hashing (bcrypt)

‡¶∏‡¶æ‡¶ß‡¶æ‡¶∞‡¶£ hash (SHA256) password ‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶®‡¶ø‡¶∞‡¶æ‡¶™‡¶¶ ‡¶®‡¶Ø‡¶º, ‡¶ï‡¶æ‡¶∞‡¶£ ‡¶è‡¶ü‡¶ø fast ‚Üí brute force attack ‡¶∏‡¶π‡¶ú

‡¶§‡¶æ‡¶á bcrypt ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º, ‡¶Ø‡¶æ slow hash ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßá

password := []byte("mySuperSecretPassword")
hash, _ := bcrypt.GenerateFromPassword(password, bcrypt.DefaultCost)


‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡ßç‡¶Ø‡¶æ:

GenerateFromPassword password ‡¶ï‡ßá hash ‡¶ï‡¶∞‡ßá ‡¶∞‡¶æ‡¶ñ‡ßá

‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶ú‡ßá ‡¶∂‡ßÅ‡¶ß‡ßÅ hash ‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶£ ‡¶ï‡¶∞‡¶ø, password ‡¶®‡¶Ø‡¶º

Login-‡¶è‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º CompareHashAndPassword ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá verify ‡¶ï‡¶∞‡¶ø



‡ß™Ô∏è‚É£ Other Crypto Utilities

crypto/aes ‚Üí Data encrypt/decrypt

crypto/rand ‚Üí Secure random number generate

crypto/rsa ‚Üí Public/private key encryption

crypto/ecdsa ‚Üí Digital signature


| ‡¶ï‡¶æ‡¶ú                        | ‡¶ï‡ßÄ‡¶≠‡¶æ‡¶¨‡ßá ‡¶π‡ßü                               |
| -------------------------- | --------------------------------------- |
| Hashing                    | ‡¶°‡ßá‡¶ü‡¶æ ‚Üí fixed-length hash                |
| HMAC                       | Data + secret key ‚Üí verify authenticity |
| Password hashing           | bcrypt ‚Üí slow & secure hash             |
| Symmetric encryption       | AES, block cipher                       |
| Asymmetric encryption/sign | RSA, ECDSA                              |
| Secure random numbers      | crypto/rand                             |


crypto package in Go

Go ‡¶§‡ßá crypto ‡¶π‡¶≤‡ßã standard library package, ‡¶Ø‡¶æ cryptography ‡¶∏‡¶Æ‡ßç‡¶™‡¶∞‡ßç‡¶ï‡¶ø‡¶§ ‡¶∏‡¶¨ ‡¶ï‡¶ø‡¶õ‡ßÅ handle ‡¶ï‡¶∞‡ßá‡•§

‡¶Ö‡¶∞‡ßç‡¶•‡¶æ‡ßé, data secure ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶Ø‡¶æ ‡¶Ø‡¶æ ‡¶¶‡¶∞‡¶ï‡¶æ‡¶∞: hashing, encryption, digital signatures, random numbers, ‡¶∏‡¶¨ ‡¶ï‡¶ø‡¶õ‡ßÅ‡¶§‡ßá‡¶á crypto package ‡¶è‡¶∞ sub-packages ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶π‡ßü‡•§

üîπ crypto ‡¶è‡¶∞ ‡¶Æ‡ßÇ‡¶≤ ‡¶ï‡¶æ‡¶ú‡¶ó‡ßÅ‡¶≤‡ßã

Hashing:

‡¶°‡ßá‡¶ü‡¶æ‡¶ï‡ßá fixed-length hash ‡¶è ‡¶∞‡ßÇ‡¶™‡¶æ‡¶®‡ßç‡¶§‡¶∞ ‡¶ï‡¶∞‡¶æ

‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£: crypto/sha256, crypto/md5

HMAC (Message Authentication):

Data + secret key ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá authenticity verify ‡¶ï‡¶∞‡¶æ

‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£: crypto/hmac

Encryption & Decryption:

Symmetric (AES) ‡¶¨‡¶æ Asymmetric (RSA) encryption

‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£: crypto/aes, crypto/rsa

Digital Signatures:

Message/Document sign ‡¶è‡¶¨‡¶Ç verify ‡¶ï‡¶∞‡¶æ

‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£: crypto/ecdsa, crypto/rsa

Secure Random Numbers:

Cryptographically secure random number generate ‡¶ï‡¶∞‡¶æ

‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£: crypto/rand